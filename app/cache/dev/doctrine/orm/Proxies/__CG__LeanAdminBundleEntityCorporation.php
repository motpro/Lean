<?php

namespace Proxies\__CG__\Lean\AdminBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Corporation extends \Lean\AdminBundle\Entity\Corporation implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'name', 'industry', 'phone', 'fax', 'email', 'address', 'postid', 'turnover', 'employee', 'weburl', 'more', 'createdUserid', 'timecreated', 'timeupdated');
        }

        return array('__isInitialized__', 'id', 'name', 'industry', 'phone', 'fax', 'email', 'address', 'postid', 'turnover', 'employee', 'weburl', 'more', 'createdUserid', 'timecreated', 'timeupdated');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Corporation $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setIndustry($industry)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIndustry', array($industry));

        return parent::setIndustry($industry);
    }

    /**
     * {@inheritDoc}
     */
    public function getIndustry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIndustry', array());

        return parent::getIndustry();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhone($phone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhone', array($phone));

        return parent::setPhone($phone);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhone', array());

        return parent::getPhone();
    }

    /**
     * {@inheritDoc}
     */
    public function setFax($fax)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFax', array($fax));

        return parent::setFax($fax);
    }

    /**
     * {@inheritDoc}
     */
    public function getFax()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFax', array());

        return parent::getFax();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', array($email));

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', array());

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddress($address)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddress', array($address));

        return parent::setAddress($address);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddress', array());

        return parent::getAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setPostid($postid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPostid', array($postid));

        return parent::setPostid($postid);
    }

    /**
     * {@inheritDoc}
     */
    public function getPostid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPostid', array());

        return parent::getPostid();
    }

    /**
     * {@inheritDoc}
     */
    public function setTurnover($turnover)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTurnover', array($turnover));

        return parent::setTurnover($turnover);
    }

    /**
     * {@inheritDoc}
     */
    public function getTurnover()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTurnover', array());

        return parent::getTurnover();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmployee($employee)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmployee', array($employee));

        return parent::setEmployee($employee);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmployee()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmployee', array());

        return parent::getEmployee();
    }

    /**
     * {@inheritDoc}
     */
    public function setWeburl($weburl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWeburl', array($weburl));

        return parent::setWeburl($weburl);
    }

    /**
     * {@inheritDoc}
     */
    public function getWeburl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWeburl', array());

        return parent::getWeburl();
    }

    /**
     * {@inheritDoc}
     */
    public function setMore($more)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMore', array($more));

        return parent::setMore($more);
    }

    /**
     * {@inheritDoc}
     */
    public function getMore()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMore', array());

        return parent::getMore();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedUserid($createdUserid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedUserid', array($createdUserid));

        return parent::setCreatedUserid($createdUserid);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedUserid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedUserid', array());

        return parent::getCreatedUserid();
    }

    /**
     * {@inheritDoc}
     */
    public function setTimecreated($timecreated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTimecreated', array($timecreated));

        return parent::setTimecreated($timecreated);
    }

    /**
     * {@inheritDoc}
     */
    public function getTimecreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTimecreated', array());

        return parent::getTimecreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setTimeupdated($timeupdated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTimeupdated', array($timeupdated));

        return parent::setTimeupdated($timeupdated);
    }

    /**
     * {@inheritDoc}
     */
    public function getTimeupdated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTimeupdated', array());

        return parent::getTimeupdated();
    }

}
